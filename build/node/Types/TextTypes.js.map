{"version":3,"sources":["Types/TextTypes.coffee"],"names":[],"mappings":"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","file":"Types/TextTypes.js","sourceRoot":"/source/","sourcesContent":["structured_types_uninitialized = require \"./StructuredTypes\"\n\nmodule.exports = (HB)->\n  structured_types = structured_types_uninitialized HB\n  types = structured_types.types\n  parser = structured_types.parser\n\n  #\n  # @nodoc\n  # At the moment TextDelete type equals the Delete type in BasicTypes.\n  # @see BasicTypes.Delete\n  #\n  class TextDelete extends types.Delete\n  parser[\"TextDelete\"] = parser[\"Delete\"]\n\n  #\n  # @nodoc\n  # Extends the basic Insert type to an operation that holds a text value\n  #\n  class TextInsert extends types.Insert\n    #\n    # @param {String} content The content of this Insert-type Operation. Usually you restrict the length of content to size 1\n    # @param {Object} uid A unique identifier. If uid is undefined, a new uid will be created.\n    #\n    constructor: (content, uid, prev, next, origin)->\n      if content?.creator?\n        @saveOperation 'content', content\n      else\n        @content = content\n      if not (prev? and next?)\n        throw new Error \"You must define prev, and next for TextInsert-types!\"\n      super uid, prev, next, origin\n\n    type: \"TextInsert\"\n\n    #\n    # Retrieve the effective length of the $content of this operation.\n    #\n    getLength: ()->\n      if @isDeleted()\n        0\n      else\n        @content.length\n\n    applyDelete: ()->\n      if @content instanceof types.Operation\n        @content.applyDelete()\n      @content = null\n      super\n\n    #\n    # The result will be concatenated with the results from the other insert operations\n    # in order to retrieve the content of the engine.\n    # @see HistoryBuffer.toExecutedArray\n    #\n    val: (current_position)->\n      if @isDeleted() or not @content?\n        \"\"\n      else\n        @content\n\n    #\n    # Convert all relevant information of this operation to the json-format.\n    # This result can be send to other clients.\n    #\n    _encode: ()->\n      json =\n        {\n          'type': \"TextInsert\"\n          'uid' : @getUid()\n          'prev': @prev_cl.getUid()\n          'next': @next_cl.getUid()\n        }\n      if @content?.getUid?\n        json['content'] = @content.getUid()\n      else\n        json['content'] = @content\n      if @origin isnt @prev_cl\n        json[\"origin\"] = @origin.getUid()\n      json\n\n  parser[\"TextInsert\"] = (json)->\n    {\n      'content' : content\n      'uid' : uid\n      'prev': prev\n      'next': next\n      'origin' : origin\n    } = json\n    new TextInsert content, uid, prev, next, origin\n\n  #\n  # Handles a WordType-like data structures with support for insertText/deleteText at a word-position.\n  # @note Currently, only Text is supported!\n  #\n  class WordType extends types.ListManager\n\n    #\n    # @private\n    # @param {Object} uid A unique identifier. If uid is undefined, a new uid will be created.\n    #\n    constructor: (uid, beginning, end, prev, next, origin)->\n      super uid, beginning, end, prev, next, origin\n\n    #\n    # Identifies this class.\n    # Use it to check whether this is a word-type or something else.\n    #\n    # @example\n    #   var x = yatta.val('unknown')\n    #   if (x.type === \"WordType\") {\n    #     console.log JSON.stringify(x.toJson())\n    #   }\n    #\n    type: \"WordType\"\n\n    applyDelete: ()->\n      o = @beginning\n      while o?\n        o.applyDelete()\n        o = o.next_cl\n      super()\n\n    cleanup: ()->\n      super()\n\n    push: (content)->\n      @insertAfter @end.prev_cl, content\n\n    insertAfter: (left, content)->\n      while left.isDeleted()\n        left = left.prev_cl # find the first character to the left, that is not deleted. Case position is 0, its the Delimiter.\n      right = left.next_cl\n      if content.type?\n        op = new TextInsert content, undefined, left, right\n        HB.addOperation(op).execute()\n      else\n        for c in content\n          op = new TextInsert c, undefined, left, right\n          HB.addOperation(op).execute()\n          left = op\n      @\n    #\n    # Inserts a string into the word.\n    #\n    # @return {WordType} This WordType object.\n    #\n    insertText: (position, content)->\n      # TODO: getOperationByPosition should return \"(i-2)th\" character\n      ith = @getOperationByPosition position # the (i-1)th character. e.g. \"abc\" a is the 0th character\n      left = ith.prev_cl # left is the non-deleted charather to the left of ith\n      @insertAfter left, content\n\n    #\n    # Deletes a part of the word.\n    #\n    # @return {WordType} This WordType object\n    #\n    deleteText: (position, length)->\n      o = @getOperationByPosition position\n\n      delete_ops = []\n      for i in [0...length]\n        if o instanceof types.Delimiter\n          break\n        d = HB.addOperation(new TextDelete undefined, o).execute()\n        o = o.next_cl\n        while not (o instanceof types.Delimiter) and o.isDeleted()\n          o = o.next_cl\n        delete_ops.push d._encode()\n      @\n\n    #\n    # Replace the content of this word with another one. Concurrent replacements are not merged!\n    # Only one of the replacements will be used.\n    #\n    # @return {WordType} Returns the new WordType object.\n    #\n    replaceText: (text)->\n      # Can only be used if the ReplaceManager was set!\n      # @see WordType.setReplaceManager\n      if @replace_manager?\n        word = HB.addOperation(new WordType undefined).execute()\n        word.insertText 0, text\n        @replace_manager.replace(word)\n        word\n      else\n        throw new Error \"This type is currently not maintained by a ReplaceManager!\"\n\n    #\n    # Get the String-representation of this word.\n    # @return {String} The String-representation of this object.\n    #\n    val: ()->\n      c = for o in @toArray()\n        if o.val?\n          o.val()\n        else\n          \"\"\n      c.join('')\n\n    #\n    # Same as WordType.val\n    # @see WordType.val\n    #\n    toString: ()->\n      @val()\n\n    #\n    # @private\n    # In most cases you would embed a WordType in a Replaceable, wich is handled by the ReplaceManager in order\n    # to provide replace functionality.\n    #\n    setReplaceManager: (op)->\n      @saveOperation 'replace_manager', op\n      @validateSavedOperations()\n      @on 'insert', (event, ins)=>\n        @replace_manager?.forwardEvent @, 'change', ins\n      @on 'delete', (event, ins, del)=>\n        @replace_manager?.forwardEvent @, 'change', del\n    #\n    # Bind this WordType to a textfield or input field.\n    #\n    # @example\n    #   var textbox = document.getElementById(\"textfield\");\n    #   yatta.bind(textbox);\n    #\n    bind: (textfield)->\n      word = @\n      textfield.value = @val()\n\n      @on \"insert\", (event, op)->\n        o_pos = op.getPosition()\n        fix = (cursor)->\n          if cursor <= o_pos\n            cursor\n          else\n            cursor += 1\n            cursor\n        left = fix textfield.selectionStart\n        right = fix textfield.selectionEnd\n\n        textfield.value = word.val()\n        textfield.setSelectionRange left, right\n\n\n      @on \"delete\", (event, op)->\n        o_pos = op.getPosition()\n        fix = (cursor)->\n          if cursor < o_pos\n            cursor\n          else\n            cursor -= 1\n            cursor\n        left = fix textfield.selectionStart\n        right = fix textfield.selectionEnd\n\n        textfield.value = word.val()\n        textfield.setSelectionRange left, right\n\n      # consume all text-insert changes.\n      textfield.onkeypress = (event)->\n        char = null\n        if event.key?\n          if event.charCode is 32\n            char = \" \"\n          else if event.keyCode is 13\n            char = '\\n'\n          else\n            char = event.key\n        else\n          char = String.fromCharCode event.keyCode\n        if char.length > 0\n          pos = Math.min textfield.selectionStart, textfield.selectionEnd\n          diff = Math.abs(textfield.selectionEnd - textfield.selectionStart)\n          word.deleteText (pos), diff\n          word.insertText pos, char\n          new_pos = pos + char.length\n          textfield.setSelectionRange new_pos, new_pos\n          event.preventDefault()\n        else\n          event.preventDefault()\n\n      textfield.onpaste = (event)->\n        event.preventDefault()\n      textfield.oncut = (event)->\n        event.preventDefault()\n\n      #\n      # consume deletes. Note that\n      #   chrome: won't consume deletions on keypress event.\n      #   keyCode is deprecated. BUT: I don't see another way.\n      #     since event.key is not implemented in the current version of chrome.\n      #     Every browser supports keyCode. Let's stick with it for now..\n      #\n      textfield.onkeydown = (event)->\n        pos = Math.min textfield.selectionStart, textfield.selectionEnd\n        diff = Math.abs(textfield.selectionEnd - textfield.selectionStart)\n        if event.keyCode? and event.keyCode is 8 # Backspace\n          if diff > 0\n            word.deleteText pos, diff\n            textfield.setSelectionRange pos, pos\n          else\n            if event.ctrlKey? and event.ctrlKey\n              val = textfield.value\n              new_pos = pos\n              del_length = 0\n              if pos > 0\n                new_pos--\n                del_length++\n              while new_pos > 0 and val[new_pos] isnt \" \" and val[new_pos] isnt '\\n'\n                new_pos--\n                del_length++\n              word.deleteText new_pos, (pos-new_pos)\n              textfield.setSelectionRange new_pos, new_pos\n            else\n              word.deleteText (pos-1), 1\n          event.preventDefault()\n        else if event.keyCode? and event.keyCode is 46 # Delete\n          if diff > 0\n            word.deleteText pos, diff\n            textfield.setSelectionRange pos, pos\n          else\n            word.deleteText pos, 1\n            textfield.setSelectionRange pos, pos\n          event.preventDefault()\n\n\n\n    #\n    # @private\n    # Encode this operation in such a way that it can be parsed by remote peers.\n    #\n    _encode: ()->\n      json = {\n        'type': \"WordType\"\n        'uid' : @getUid()\n        'beginning' : @beginning.getUid()\n        'end' : @end.getUid()\n      }\n      if @prev_cl?\n        json['prev'] = @prev_cl.getUid()\n      if @next_cl?\n        json['next'] = @next_cl.getUid()\n      if @origin? # and @origin isnt @prev_cl\n        json[\"origin\"] = @origin().getUid()\n      json\n\n  parser['WordType'] = (json)->\n    {\n      'uid' : uid\n      'beginning' : beginning\n      'end' : end\n      'prev': prev\n      'next': next\n      'origin' : origin\n    } = json\n    new WordType uid, beginning, end, prev, next, origin\n\n  types['TextInsert'] = TextInsert\n  types['TextDelete'] = TextDelete\n  types['WordType'] = WordType\n  structured_types\n\n\n"]}