{"version":3,"sources":["Yatta.coffee"],"names":[],"mappings":"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","file":"Yatta.js","sourceRoot":"/source/","sourcesContent":["\njson_types_uninitialized = require \"./Types/JsonTypes\"\nHistoryBuffer = require \"./HistoryBuffer\"\nEngine = require \"./Engine\"\nadaptConnector = require \"./ConnectorAdapter\"\n\n#\n# Framework for Json data-structures.\n# Known values that are supported:\n# * String\n# * Integer\n# * Array \n#\nclass Yatta\n\n  # \n  # @param {String} user_id Unique id of the peer.\n  # @param {Connector} Connector the connector class.\n  #\n  constructor: (@connector)->\n    user_id = @connector.id # TODO: change to getUniqueId()\n    @HB = new HistoryBuffer user_id\n    type_manager = json_types_uninitialized @HB\n    @types = type_manager.types\n    @engine = new Engine @HB, type_manager.parser\n    @HB.engine = @engine # TODO: !! only for debugging\n    adaptConnector @connector, @engine, @HB, type_manager.execution_listener\n    first_word = new @types.JsonType(@HB.getReservedUniqueIdentifier()).execute()\n\n    uid_beg = @HB.getReservedUniqueIdentifier()\n    uid_end = @HB.getReservedUniqueIdentifier()\n    beg = (new @types.Delimiter uid_beg, undefined, uid_end).execute()\n    end = (new @types.Delimiter uid_end, beg, undefined).execute()\n\n    @root_element = (new @types.ReplaceManager undefined, @HB.getReservedUniqueIdentifier(), beg, end).execute()\n    @root_element.replace first_word, @HB.getReservedUniqueIdentifier()\n \n  #\n  # @return JsonType\n  #\n  getSharedObject: ()->\n    @root_element.val()\n\n  #\n  # Get the initialized connector.\n  #\n  getConnector: ()->\n    @connector\n\n  #\n  # @see HistoryBuffer\n  #\n  getHistoryBuffer: ()->\n    @HB\n\n  #\n  # @see JsonType.setMutableDefault\n  #\n  setMutableDefault: (mutable)->\n    @getSharedObject().setMutableDefault(mutable)\n\n  #\n  # Get the UserId from the HistoryBuffer object.\n  # In most cases this will be the same as the user_id value with which\n  # Yatta was initialized (Depending on the HistoryBuffer implementation).\n  #\n  getUserId: ()->\n    @HB.getUserId()\n\n  #\n  # @see JsonType.toJson\n  #\n  toJson : ()->\n    @getSharedObject().toJson()\n\n  #\n  # @see JsonType.val\n  #\n  val : ()->\n    @getSharedObject().val arguments...\n\n  #\n  # @see Operation.on\n  #\n  on: ()->\n    @getSharedObject().on arguments...\n\n  #\n  # @see Operation.deleteListener\n  #\n  deleteListener: ()->\n    @getSharedObject().deleteListener arguments...\n\n  #\n  # @see JsonType.value\n  #\n  Object.defineProperty Yatta.prototype, 'value',\n    get : -> @getSharedObject().value\n    set : (o)->\n      if o.constructor is {}.constructor\n        for o_name,o_obj of o\n          @val(o_name, o_obj, 'immutable')\n      else\n        throw new Error \"You must only set Object values!\"\n\nmodule.exports = Yatta\nif window? and not window.Yatta?\n  window.Yatta = Yatta\n"]}