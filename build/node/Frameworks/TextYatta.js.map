{"version":3,"file":"Frameworks/TextYatta.js","sources":["Frameworks/TextYatta.coffee"],"names":[],"mappings":"CACA,WAAA,GAAA,GAAA,EAAA,EAAA,CAAA,GAA2B,QAAQ,sBACnC,EAAgB,QAAQ,oBACxB,EAAS,QAAQ,aAKX,EAAA,WAMS,QAAA,GAAC,EAAS,GACrB,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,MAAC,GAAS,GAAA,GAAc,GACxB,EAAa,EAAyB,KAAC,IACvC,KAAC,MAAQ,EAAW,MACpB,KAAC,OAAa,GAAA,GAAO,KAAC,GAAI,EAAW,QACrC,KAAC,UAAgB,GAAA,GAAU,KAAC,OAAQ,KAAC,GAAI,EAAW,mBAAoB,MAExE,EAAY,KAAC,GAAG,aAAiB,GAAA,MAAC,MAAM,WAAW,QAAS,IAAK,UAAW,cAAgB,OAAW,SACvG,EAAY,KAAC,GAAG,aAAiB,GAAA,MAAC,MAAM,WAAW,QAAS,IAAK,UAAW,QAAgB,EAAW,SACvG,EAAU,QAAU,EACpB,EAAU,UACV,EAAI,UACJ,EAAiB,GAAA,MAAC,MAAM,MAAM,QAAS,IAAK,UAAW,KAAM,EAAW,GACxE,KAAC,GAAG,aAAa,GAAY,UAE7B,GAAU,QAAS,IAAK,UAAW,MACnC,GAAY,QAAS,IAAK,UAAW,iBACrC,GAAY,QAAS,IAAK,UAAW,WACrC,EAAM,KAAC,GAAG,aAAiB,GAAA,MAAC,MAAM,UAAU,EAAS,OAAW,IAAS,UACzE,EAAM,KAAC,GAAG,aAAiB,GAAA,MAAC,MAAM,UAAU,EAAS,EAAK,SAAW,UACrE,KAAC,aAAe,KAAC,GAAG,aAAiB,GAAA,MAAC,MAAM,eAAe,OAAW,EAAO,EAAK,IAAK,UACvF,KAAC,aAAa,QAAQ,GAAc,QAAS,IAAK,UAAW,sBArB/D,GAAA,UA2BA,gBAAiB,iBACf,MAAC,aAAa,OA5BhB,EAAA,UAiCA,UAAW,iBACT,MAAC,QAlCH,EAAA,UAuCA,aAAc,iBACZ,MAAC,WAxCH,EAAA,UA6CA,iBAAkB,iBAChB,MAAC,IA9CH,EAAA,UAqDA,UAAW,iBACT,MAAC,GAAG,aAtDN,EAAA,UA2DA,IAAK,iBACH,MAAC,kBAAkB,OA5DrB,EAAA,UAiEA,WAAY,SAAC,EAAK,SAChB,MAAC,kBAAkB,WAAW,EAAK,IAlErC,EAAA,UAuEA,WAAY,SAAC,EAAK,SAChB,MAAC,kBAAkB,WAAW,EAAK,IAxErC,EAAA,UA6EA,KAAM,SAAC,SACL,MAAC,kBAAkB,KAAK,IA9E1B,EAAA,UAmFA,YAAa,SAAC,SACZ,MAAC,kBAAkB,YAAY,IApFjC,EAAA,UAsFA,GAAI,WACF,GAAA,UAAA,EAAA,KAAC,cAAa,GAAd,MAAA,EAAiB,iBAGrB,OAAO,QAAU,EACd,mBAAA,SAAA,OAAA,SACM,MAAA,OAAA,IACL,OAAO,MACT,OAAO,EAAE,UAAY","sourcesContent":["\ntext_types_uninitialized = require \"../Types/TextTypes\"\nHistoryBuffer = require \"../HistoryBuffer\"\nEngine = require \"../Engine\"\n\n#\n# Framework for Text Datastructures.\n#\nclass TextYatta\n\n  #\n  # @param {String} user_id Uniqe user id that defines this peer.\n  # @param {Connector} Connector The connector defines how you connect to the other peers.\n  #\n  constructor: (user_id, Connector)->\n    @HB = new HistoryBuffer user_id\n    text_types = text_types_uninitialized @HB\n    @types = text_types.types\n    @engine = new Engine @HB, text_types.parser\n    @connector = new Connector @engine, @HB, text_types.execution_listener, @\n\n    beginning = @HB.addOperation new @types.Delimiter {creator: '_', op_number: '_beginning'} , undefined, undefined\n    end =       @HB.addOperation new @types.Delimiter {creator: '_', op_number: '_end'}       , beginning, undefined\n    beginning.next_cl = end\n    beginning.execute()\n    end.execute()\n    first_word = new @types.Word {creator: '_', op_number: '_'}, beginning, end\n    @HB.addOperation(first_word).execute()\n\n    uid_r = { creator: '_', op_number: \"RM\" }\n    uid_beg = { creator: '_', op_number: \"_RM_beginning\" }\n    uid_end = { creator: '_', op_number: \"_RM_end\" }\n    beg = @HB.addOperation(new @types.Delimiter uid_beg, undefined, uid_end).execute()\n    end = @HB.addOperation(new @types.Delimiter uid_end, beg, undefined).execute()\n    @root_element = @HB.addOperation(new @types.ReplaceManager undefined, uid_r, beg, end).execute()\n    @root_element.replace first_word, { creator: '_', op_number: 'Replaceable'}\n\n\n  #\n  # @result Word\n  #\n  getSharedObject: ()->\n    @root_element.val()\n\n  #\n  # @see Engine\n  #\n  getEngine: ()->\n    @engine\n\n  #\n  # Get the initialized connector.\n  #\n  getConnector: ()->\n    @connector\n\n  #\n  # @see HistoryBuffer\n  #\n  getHistoryBuffer: ()->\n    @HB\n\n  #\n  # Get the UserId from the HistoryBuffer object.\n  # In most cases this will be the same as the user_id value with which\n  # JsonYatta was initialized (Depending on the HistoryBuffer implementation).\n  #\n  getUserId: ()->\n    @HB.getUserId()\n\n  #\n  # @see JsonType.val\n  #\n  val: ()->\n    @getSharedObject().val()\n\n  #\n  # @see Word.insertText\n  #\n  insertText: (pos, content)->\n    @getSharedObject().insertText pos, content\n\n  #\n  # @see Word.deleteText\n  #\n  deleteText: (pos, length)->\n    @getSharedObject().deleteText pos, length\n\n  #\n  # @see Word.bind\n  #\n  bind: (textarea)->\n    @getSharedObject().bind textarea\n\n  #\n  # @see Word.replaceText\n  #\n  replaceText: (text)->\n    @getSharedObject().replaceText text\n\n  on: ()->\n    @root_element.on arguments...\n\n\nmodule.exports = TextYatta\nif window?\n  if not window.Y?\n    window.Y = {}\n  window.Y.TextYatta = TextYatta\n"],"sourceRoot":"/source/"}