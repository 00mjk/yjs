{"version":3,"sources":["y.js","Struct.js","Connectors/Test.js","runtime.js","Connector.js","OperationStore.js","Connectors/WebRTC.js","OperationStores/IndexedDB.js","OperationStores/Memory.js","Types/List.js","Types/Map.js"],"names":["_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","enumerable","writable","configurable","__proto__","_classCallCheck","instance","Constructor","compareIds","id1","id2","getRandom","o","Array","Math","floor","random","length","keys","key","push","global","wrap","innerFn","outerFn","self","tryLocsList","generator","Generator","_invoke","makeInvokeMethod","Context","tryCatch","fn","obj","arg","type","call","err","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","forEach","method","this","AwaitArgument","AsyncIterator","invoke","result","Promise","resolve","then","invokeNext","invokeThrow","unwrapped","enqueue","enqueueResult","previousPromise","invokeReturn","process","domain","bind","context","state","GenStateSuspendedStart","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","iterator","undefined","returnMethod","record","info","done","GenStateSuspendedYield","resultName","next","nextLoc","sent","dispatchException","abrupt","ContinueSentinel","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","values","iterable","iteratorMethod","iteratorSymbol","isNaN","i","hasOwn","hasOwnProperty","Symbol","inModule","module","runtime","regeneratorRuntime","exports","Gp","displayName","isGeneratorFunction","genFun","ctor","name","mark","awrap","async","iter","toString","object","reverse","pop","prev","tempName","tempIndex","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","window","callee$0$0","context$1$0","Y","opts","db","connector","y","requestTransaction","callee$2$0","context$3$0","addOperation","id","struct","map","root","Map","Create","transact","destroy","disconnect","removeDatabase","AbstractConnector","role","connections","userEventListeners","whenSyncedListeners","currentSyncTarget","setUserId","userId","onUserEvent","f","userLeft","user","findNextSyncTarget","_iterator","_isArray","isArray","_i","_ref","action","userJoined","isSynced","_iterator2","_isArray2","_i2","_ref2","whenSynced","syncUser","uid","conn","os","t0","t1","getStateVector","t3","t2","t4","stateVector","send","_iterator3","_isArray3","_i3","_ref3","receiveMessage","sender","m","_this","callee$3$0","ops","sv","context$4$0","getOperations","syncingClients","setTimeout","filter","cli","syncingClientDuration","broadcast","_iterator4","_isArray4","_i4","_ref4","client","apply","parseMessageFromXml","parseArray","_x","_again","_function","node","_iterator5","_isArray5","_i5","_ref5","n","children","getAttribute","parseObject","json","attrName","attrs","int","parseInt","encodeMessageToXml","msg","encodeObject","c","encodeArray","setAttribute","array","_iterator6","_isArray6","_i6","_ref6","e","xmlns","AbstractTransaction","store","op","context$2$0","getState","clock","setState","setOperation","operationAdded","AbstractOperationStore","parentListeners","parentListenersRequestPending","parentListenersActivated","listenersById","listenersByIdExecuteNow","listenersByIdRequestPending","_iterator7","_isArray7","_i7","_ref7","required","Struct","requiredOps","whenOperationsExist","execute","ids","args","listener","missing","_iterator8","_isArray8","_i8","_ref8","_id","sid","JSON","stringify","l","exeNow","ls","_iterator9","_isArray9","_i9","_ref9","_iterator10","_isArray10","_i10","_ref10","parse","getOperation","_iterator11","_isArray11","_i11","_ref11","listeners","parent","al","activatedOperations","parentId","notifyObservers","removeParentListener","g","addParentListener","Operation","Insert","start","end","left","right","origin","parentSub","parend","getDistanceToOrigin","d","distanceToOrigin","tmp","next_cl","List","ref","pos","res","operation","content","insert","contents","or","_iterator12","_isArray12","_i12","_ref12","_iterator13","_isArray13","_i13","_ref13","get","set","globalRoom","users","buffers","removeUser","addUser","_iterator14","_isArray14","_i14","_ref14","u","setInterval","bufs","userIdCounter","Test","_AbstractConnector","options","message","_iterator15","_isArray15","_i15","_ref15","buf","WebRTC","_AbstractConnector2","room","url","swr","SimpleWebRTC","once","joinRoom","webrtc","peers","on","peer","room_","payload","success","getPeers","sendDirectly","sendDirectlyToAll","IndexedDB","Transaction","_AbstractTransaction","transaction","objectStore","buffer","put","removeOperation","cursorResult","cursor","openCursor","getStateSet","ss","_iterator16","_isArray16","_i16","_ref16","startSS","endSV","_iterator17","_isArray17","_i17","_ref17","endState","startPos","endPos","range","IDBKeyRange","bound","OperationStore","_AbstractOperationStore","handleTransactions","t","request","IDBRequest","IDBCursor","onsuccess","tGen","onerror","transactionQueue","queue","shift","onRequest","IDBOpenDBRequest","event","target","onupgradeneeded","createObjectStore","keyPath","console","log","namespace","idbVersion","transactionGen","cont","indexedDB","open","makeGen","close","deleteDatabase","Memory","_AbstractTransaction2","_iterator18","_isArray18","_i18","_ref18","_AbstractOperationStore2","gen","_model","val","YList","model","args$3$0","arguments","YMap"],"mappings":"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","file":"y.js","sourcesContent":["/* @flow */\n\nconst GeneratorFunction = (function*(){}).constructor;\n\nclass Y { //eslint-disable-line no-unused-vars\n  constructor (opts) {\n    this.db = new Y[opts.db.name](this, opts.db);\n    this.connector = new Y[opts.connector.name](this, opts.connector);\n    var y = this;\n    this.db.requestTransaction(function*(){\n      yield* this.addOperation({\n        id: [\"_\", 0],\n        struct: \"Map\",\n        map: {}\n      });\n      y.root = new Y.Map.Create([\"_\", 0]);\n    });\n  }\n  transact (generator) {\n    if (generator.constructor !== GeneratorFunction) {\n      throw new Error(\"y.transact requires a Generator function! E.g. function*(){/*..*/}\");\n    }\n    this.db.requestTransaction(generator);\n  }\n  destroy () {\n    this.connector.disconnect();\n    this.db.removeDatabase();\n    this.connector = null;\n    this.db = null;\n    this.transact = function(){\n      throw new Error(\"Remember?, you destroyed this type ;)\");\n    };\n  }\n}\n","/* @flow */\n\n// Op is anything that we could get from the OperationStore.\ntype Op = Object;\ntype Id = [string, number];\n\ntype List = {\n  id: Id,\n  start: Insert,\n  end: Insert\n};\n\ntype Insert = {\n  id: Id,\n  left: Insert,\n  right: Insert,\n  origin: Insert,\n  parent: List,\n  content: any\n};\n\nfunction compareIds(id1, id2) {\n  if (id1 == null) {\n    if (id2 == null) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  if (id1[0] == id2[0] && id1[1] === id2[1]) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nvar Struct = {\n  Operation: {  //eslint-disable-line no-unused-vars\n    create: function*(op : Op) : Struct.Operation {\n      var user = this.store.y.connector.userId;\n      var state = yield* this.getState(user);\n      op.id = [user, state.clock];\n      return yield* this.addOperation(op);\n    }\n  },\n  Insert: {\n    /*{\n        content: any,\n        left: Id,\n        right: Id,\n        parent: Id,\n        parentSub: string (optional)\n      }\n    */\n    create: function*( op: Op ) : Insert {\n      if ( op.left === undefined\n        || op.right === undefined\n        || op.parent === undefined ) {\n          throw new Error(\"You must define left, right, and parent!\");\n        }\n      op.origin = op.left;\n      op.struct = \"Insert\";\n      yield* Struct.Operation.create.call(this, op);\n\n      if (op.left != null) {\n        op.left.right = op.id;\n        yield* this.setOperation(op.left);\n      }\n      if (op.right != null) {\n        op.right.left = op.id;\n        yield* this.setOperation(op.right);\n      }\n      var parent = yield* this.getOperation(op.parent);\n      if (op.parentSub != null){\n        if (compareIds(parent.map[op.parentSub], op.left)) {\n          parent.map[op.parentSub] = op.id;\n          yield* this.setOperation(parent);\n        }\n      } else {\n        var start = compareIds(parent.start, op.right);\n        var end = compareIds(parent.end, op.left);\n        if (start || end) {\n          if (start) {\n            parent.start = op.id;\n          }\n          if (end) {\n            parend.end = op.id;\n          }\n          yield* this.setOperation(parent);\n        }\n      }\n      return op;\n    },\n    requiredOps: function(op, ids){\n      if(op.left != null){\n        ids.push(op.left);\n      }\n      if(op.right != null){\n        ids.push(op.right);\n      }\n      return ids;\n    },\n    getDistanceToOrigin: function *(op){\n      var d = 0;\n      var o = yield this.getOperation(op.left);\n      while (op.origin !== (o ? o.id : null)) {\n        d++;\n        o = yield this.getOperation(o.left);\n      }\n      return d;\n    },\n    /*\n    # $this has to find a unique position between origin and the next known character\n    # case 1: $origin equals $o.origin: the $creator parameter decides if left or right\n    #         let $OL= [o1,o2,o3,o4], whereby $this is to be inserted between o1 and o4\n    #         o2,o3 and o4 origin is 1 (the position of o2)\n    #         there is the case that $this.creator < o2.creator, but o3.creator < $this.creator\n    #         then o2 knows o3. Since on another client $OL could be [o1,o3,o4] the problem is complex\n    #         therefore $this would be always to the right of o3\n    # case 2: $origin < $o.origin\n    #         if current $this insert_position > $o origin: $this ins\n    #         else $insert_position will not change\n    #         (maybe we encounter case 1 later, then this will be to the right of $o)\n    # case 3: $origin > $o.origin\n    #         $this insert_position is to the left of $o (forever!)\n    */\n    execute: function*(op){\n      var distanceToOrigin = yield* Struct.Insert.getDistanceToOrigin(op); // most cases: 0 (starts from 0)\n      var i = distanceToOrigin; // loop counter\n      var o = yield* this.getOperation(this.left);\n      o = yield* this.getOperation(o.right);\n      var tmp;\n      while (true) {\n        if (o.id !== this.right){\n          if (Struct.Insert.getDistanceToOrigin(o) === i) {\n            // case 1\n            if (o.id[0] < op.id[0]) {\n              op.left = o;\n              distanceToOrigin = i + 1;\n            }\n          } else if ((tmp = Struct.Insert.getDistanceToOrigin(o)) < i) {\n            // case 2\n            if (i - distanceToOrigin <= tmp) {\n              op.left = o;\n              distanceToOrigin = i + 1;\n            }\n          } else {\n            break;\n          }\n          i++;\n          o = yield* this.getOperation(o.next_cl);\n        } else {\n          break;\n        }\n      }\n\n      // reconnect..\n      var left = null;\n      var right = null;\n      if (op.left != null) {\n        left = this.getOperation(op.left);\n        left.right = op.id;\n        yield* this.setOperation(left);\n      }\n      if (op.right != null) {\n        right = this.getOperation(op.right);\n        right.left = op.id;\n        yield* this.setOperation(right);\n      }\n      op.left = left;\n      op.right = right;\n      yield* this.setOperation(op);\n\n      // notify parent\n      var parent = this.getOperation(op.parent);\n      if (op.parentSub != null) {\n        if (right == null) {\n          parent.map[op.parentSub] = op.id;\n          yield* this.setOperation(parent);\n        }\n      } else {\n        if (right == null || left == null) {\n          if (right == null) {\n            parent.end = op.id;\n          }\n          if (left == null) {\n            parent.start = op.id;\n          }\n          yield* this.setOperation(parent);\n        }\n      }\n    }\n  },\n  List: {\n    create: function*( op : Op){\n      op.start = null;\n      op.end = null;\n      op.struct = \"List\";\n      return yield* Struct.Operation.create.call(this, op);\n    },\n    requiredOps: function(op, ids){\n      if (op.start != null) {\n        ids.push(op.start);\n      }\n      if (op.end != null){\n        ids.push(op.end);\n      }\n      return ids;\n    },\n    execute: function* () {\n      // nop\n    },\n    ref: function* (op : Op, pos : number) : Insert {\n      var o = op.start;\n      while ( pos !== 0 || o != null) {\n        o = (yield* this.getOperation(o)).right;\n        pos--;\n      }\n      return (o == null) ? null : yield* this.getOperation(o);\n    },\n    map: function* (o : Op, f : Function) : Array<any> {\n      o = o.start;\n      var res = [];\n      while ( o != null) {\n        var operation = yield* this.getOperation(o);\n        res.push(f(operation.content));\n        o = operation.right;\n      }\n      return res;\n    },\n    insert: function* (op, pos : number, contents : Array<any>) {\n      var o = yield* Struct.List.ref.call(this, op, pos);\n      var or = yield* this.getOperation(o.right);\n      for (var content of contents) {\n        var insert = {\n          left: o,\n          right: or,\n          content: content,\n          parent: op\n        };\n        o = yield* Struct.Insert.create.call(this, insert);\n      }\n    }\n  },\n  Map: {\n    /*\n      {\n        // empty\n      }\n    */\n    create: function*( op : Op ){\n      op.map = {};\n      op.struct = \"Map\";\n      return yield* Struct.Operation.create.call(this, op);\n    },\n    requiredOps: function(op, ids){\n      for (var end of op.map) {\n        ids.push(end);\n      }\n      return ids;\n    },\n    execute: function* () {\n      // nop\n    },\n    get: function* (op, name) {\n      return (yield* this.getOperation(op.map[name])).content;\n    },\n    set: function* (op, name, value) {\n      var end = op.map[name];\n      if (end == null) {\n        end = null;\n        op.map[name] = end;\n      }\n      var insert = {\n        left: end,\n        right: null,\n        content: value,\n        parent: op.id,\n        parentSub: name\n      };\n      yield* Struct.Insert.create.call(this, insert);\n    }\n  }\n};\n\nY.Struct = Struct;\n","// returns a random element of o\n// works on Object, and Array\nfunction getRandom (o) {\n  if (o instanceof Array) {\n    return o[Math.floor(Math.random() * o.length)];\n  } else if (o.constructor === Object) {\n    var keys = [];\n    for (var key in o) {\n      keys.push(key);\n    }\n    return o[getRandom(keys)];\n  }\n}\n\nvar globalRoom = {\n  users: {},\n  buffers: {},\n  removeUser: function(user){\n\n    for (var i in this.users) {\n      this.users[i].userLeft(user);\n    }\n    delete this.users[user];\n    delete this.buffers[user];\n  },\n  addUser: function(connector){\n    for (var u of this.users) {\n      u.userJoined(connector.userId);\n    }\n    this.users[connector.userId] = connector;\n    this.buffers[connector.userId] = [];\n  }\n};\n\nsetInterval(function(){\n  var bufs = [];\n  for (var i in globalRoom.buffers) {\n    if (globalRoom.buffers[i].length > 0) {\n      bufs.push(i);\n    }\n  }\n  if (bufs.length > 0) {\n    var userId = getRandom(bufs);\n    var m = globalRoom.buffers[userId];\n    var user = globalRoom.users[userId];\n    user.receiveMessage(m);\n  }\n}, 10);\n\nvar userIdCounter = 0;\n\nclass Test extends AbstractConnector {\n  constructor (y, options) {\n    if(options === undefined){\n      throw new Error(\"Options must not be undefined!\");\n    }\n    super(y, {\n      role: \"master\"\n    });\n\n    this.setUserId((userIdCounter++) + \"\");\n  }\n  send (uid, message) {\n    globalRoom.buffers[uid].push(message);\n  }\n  broadcast (message) {\n    for (var buf of globalRoom.buffers) {\n      buf.push(message);\n    }\n  }\n  disconnect () {\n    globalRoom.removeUser(this.userId);\n  }\n}\n\nY.Test = Test;\n","/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var hasOwn = Object.prototype.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var iteratorSymbol =\n    typeof Symbol === \"function\" && Symbol.iterator || \"@@iterator\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided, then outerFn.prototype instanceof Generator.\n    var generator = Object.create((outerFn || Generator).prototype);\n\n    generator._invoke = makeInvokeMethod(\n      innerFn, self || null,\n      new Context(tryLocsList || [])\n    );\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype;\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    genFun.__proto__ = GeneratorFunctionPrototype;\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `value instanceof AwaitArgument` to determine if the yielded value is\n  // meant to be awaited. Some may consider the name of this method too\n  // cutesy, but they are curmudgeons.\n  runtime.awrap = function(arg) {\n    return new AwaitArgument(arg);\n  };\n\n  function AwaitArgument(arg) {\n    this.arg = arg;\n  }\n\n  function AsyncIterator(generator) {\n    // This invoke function is written in a style that assumes some\n    // calling function (or Promise) will handle exceptions.\n    function invoke(method, arg) {\n      var result = generator[method](arg);\n      var value = result.value;\n      return value instanceof AwaitArgument\n        ? Promise.resolve(value.arg).then(invokeNext, invokeThrow)\n        : Promise.resolve(value).then(function(unwrapped) {\n            result.value = unwrapped;\n            return result;\n          }, invokeThrow);\n    }\n\n    if (typeof process === \"object\" && process.domain) {\n      invoke = process.domain.bind(invoke);\n    }\n\n    var invokeNext = invoke.bind(generator, \"next\");\n    var invokeThrow = invoke.bind(generator, \"throw\");\n    var invokeReturn = invoke.bind(generator, \"return\");\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      var enqueueResult =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(function() {\n          return invoke(method, arg);\n        }) : new Promise(function(resolve) {\n          resolve(invoke(method, arg));\n        });\n\n      // Avoid propagating enqueueResult failures to Promises returned by\n      // later invocations of the iterator, and call generator.return() to\n      // allow the generator a chance to clean up.\n      previousPromise = enqueueResult[\"catch\"](invokeReturn);\n\n      return enqueueResult;\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          if (method === \"return\" ||\n              (method === \"throw\" && delegate.iterator[method] === undefined)) {\n            // A return or throw (when the delegate iterator has no throw\n            // method) always terminates the yield* loop.\n            context.delegate = null;\n\n            // If the delegate iterator has a return method, give it a\n            // chance to clean up.\n            var returnMethod = delegate.iterator[\"return\"];\n            if (returnMethod) {\n              var record = tryCatch(returnMethod, delegate.iterator, arg);\n              if (record.type === \"throw\") {\n                // If the return method threw an exception, let that\n                // exception prevail over the original return or throw.\n                method = \"throw\";\n                arg = record.arg;\n                continue;\n              }\n            }\n\n            if (method === \"return\") {\n              // Continue with the outer return, now that the delegate\n              // iterator has been terminated.\n              continue;\n            }\n          }\n\n          var record = tryCatch(\n            delegate.iterator[method],\n            delegate.iterator,\n            arg\n          );\n\n          if (record.type === \"throw\") {\n            context.delegate = null;\n\n            // Like returning generator.throw(uncaught), but without the\n            // overhead of an extra function call.\n            method = \"throw\";\n            arg = record.arg;\n            continue;\n          }\n\n          // Delegate generator ran and handled its own exceptions so\n          // regardless of what the method was, we continue as if it is\n          // \"next\" with an undefined arg.\n          method = \"next\";\n          arg = undefined;\n\n          var info = record.arg;\n          if (info.done) {\n            context[delegate.resultName] = info.value;\n            context.next = delegate.nextLoc;\n          } else {\n            state = GenStateSuspendedYield;\n            return info;\n          }\n\n          context.delegate = null;\n        }\n\n        if (method === \"next\") {\n          if (state === GenStateSuspendedYield) {\n            context.sent = arg;\n          } else {\n            delete context.sent;\n          }\n\n        } else if (method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw arg;\n          }\n\n          if (context.dispatchException(arg)) {\n            // If the dispatched exception was caught by a catch block,\n            // then let that catch block handle the exception normally.\n            method = \"next\";\n            arg = undefined;\n          }\n\n        } else if (method === \"return\") {\n          context.abrupt(\"return\", arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          var info = {\n            value: record.arg,\n            done: context.done\n          };\n\n          if (record.arg === ContinueSentinel) {\n            if (context.delegate && method === \"next\") {\n              // Deliberately forget the last sent value so that we don't\n              // accidentally pass it on to the delegate.\n              arg = undefined;\n            }\n          } else {\n            return info;\n          }\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(arg) call above.\n          method = \"throw\";\n          arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset();\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function() {\n      this.prev = 0;\n      this.next = 0;\n      this.sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      // Pre-initialize at least 20 temporary variables to enable hidden\n      // class optimizations for simple generators.\n      for (var tempIndex = 0, tempName;\n           hasOwn.call(this, tempName = \"t\" + tempIndex) || tempIndex < 20;\n           ++tempIndex) {\n        this[tempName] = null;\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.next = finallyEntry.finallyLoc;\n      } else {\n        this.complete(record);\n      }\n\n      return ContinueSentinel;\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = record.arg;\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // Among the various tricks for obtaining a reference to the global\n  // object, this seems to be the most reliable technique that does not\n  // use indirect eval (which violates Content Security Policy).\n  typeof global === \"object\" ? global :\n  typeof window === \"object\" ? window :\n  typeof self === \"object\" ? self : this\n);\n","\nclass AbstractConnector { //eslint-disable-line no-unused-vars\n  /*\n    opts\n     .role : String Role of this client (\"master\" or \"slave\")\n     .userId : String that uniquely defines the user.\n  */\n  constructor (y, opts) {\n    this.y = y;\n    if (opts == null){\n      opts = {};\n    }\n    if (opts.role == null || opts.role === \"master\") {\n      this.role = \"master\";\n    } else if (opts.role === \"slave\") {\n      this.role = \"slave\";\n    } else {\n      throw new Error(\"Role must be either 'master' or 'slave'!\");\n    }\n    this.role = opts.role;\n    this.connections = {};\n    this.userEventListeners = [];\n    this.whenSyncedListeners = [];\n    this.currentSyncTarget = null;\n  }\n  setUserId (userId) {\n    this.userId = userId;\n    this.y.db.setUserId(userId);\n  }\n  onUserEvent (f) {\n    this.userEventListeners.push(f);\n  }\n  userLeft (user : string) {\n    delete this.connections[user];\n    if (user === this.currentSyncTarget){\n      this.currentSyncTarget = null;\n      this.findNextSyncTarget();\n    }\n    for (var f of this.userEventListeners){\n      f({\n        action: \"userLeft\",\n        user: user\n      });\n    }\n  }\n  userJoined (user, role) {\n    if(role == null){\n      throw new Error(\"You must specify the role of the joined user!\");\n    }\n    if (this.connections[user] != null) {\n      throw new Error(\"This user already joined!\");\n    }\n    this.connections[user] = {\n      isSynced: false,\n      role: role\n    };\n    for (var f of this.userEventListeners) {\n      f({\n        action: \"userJoined\",\n        user: user,\n        role: role\n      });\n    }\n  }\n  // Execute a function _when_ we are connected.\n  // If not connected, wait until connected\n  whenSynced (f) {\n    if (this.isSynced === true) {\n      f();\n    } else {\n      this.whenSyncedListeners.push(f);\n    }\n  }\n  // returns false, if there is no sync target\n  // true otherwise\n  findNextSyncTarget () {\n    if (this.currentSyncTarget != null && this.connections[this.currentSyncTarget].isSynced === false) {\n      throw new Error(\"The current sync has not finished!\");\n    }\n\n\n    var syncUser = null;\n    for (var uid in this.connections) {\n      syncUser = this.connections[uid];\n      if (!syncUser.isSynced) {\n        break;\n      }\n    }\n    if (syncUser != null){\n      var conn = this;\n      this.y.os.requestTransaction(function*(){\n        conn.currentSyncTarget = uid;\n        conn.send(uid, {\n          type: \"sync step 1\",\n          stateVector: yield* this.getStateVector()\n        });\n      });\n    }\n    // set the state to synced!\n    if (!this.isSynced) {\n      this.isSynced = true;\n      for (var f of this.whenSyncedListeners) {\n        f();\n      }\n      this.whenSyncedListeners = null;\n    }\n    return false;\n  }\n  // You received a raw message, and you know that it is intended for to Yjs. Then call this function.\n  receiveMessage (sender, m) {\n    if (m.type === \"sync step 1\") {\n      // TODO: make transaction, stream the ops\n      let conn = this;\n      this.os.requestTransaction(function*(){\n        var ops = yield* this.getOperations(m.stateVector);\n        var sv = yield* this.getStateVector();\n        conn.send(sender, {\n          type: \"sync step 2\",\n          os: ops,\n          stateVector: sv\n        });\n        conn.syncingClients.push(sender);\n        setTimeout(function(){\n          conn.syncingClients = conn.syncingClients.filter(function(cli){\n            return cli !== sender;\n          });\n          conn.send(sender, {\n            type: \"sync done\"\n          });\n        }, conn.syncingClientDuration);\n      });\n    } else if (m.type === \"sync step 2\") {\n      let conn = this;\n      this.os.requestTransaction(function*(){\n        var ops = yield* this.getOperations(m.stateVector);\n        conn.broadcast({\n          type: \"update\",\n          ops: ops\n        });\n      });\n    } else if (m.type === \"sync done\") {\n      this.connections[sender].isSynced = true;\n      this.findNextSyncTarget();\n    } else if (m.type === \"update\") {\n      for (var client of this.syncingClients) {\n        this.send(client, m);\n      }\n      this.os.apply(m.ops);\n    }\n  }\n  // Currently, the HB encodes operations as JSON. For the moment I want to keep it\n  // that way. Maybe we support encoding in the HB as XML in the future, but for now I don't want\n  // too much overhead. Y is very likely to get changed a lot in the future\n  //\n  // Because we don't want to encode JSON as string (with character escaping, wich makes it pretty much unreadable)\n  // we encode the JSON as XML.\n  //\n  // When the HB support encoding as XML, the format should look pretty much like this.\n  //\n  // does not support primitive values as array elements\n  // expects an ltx (less than xml) object\n  parseMessageFromXml (m) {\n    function parseArray (node) {\n      for (var n of node.children){\n        if (n.getAttribute(\"isArray\") === \"true\") {\n          return parseArray(n);\n        } else {\n          return parseObject(n);\n        }\n      }\n    }\n    function parseObject (node) {\n      var json = {};\n      for (var attrName in node.attrs) {\n        var value = node.attrs[attrName];\n        var int = parseInt(value);\n        if (isNaN(int) || (\"\" + int) !== value){\n          json[attrName] = value;\n        } else {\n          json[attrName] = int;\n        }\n      }\n      for (var n in node.children){\n        var name = n.name;\n        if (n.getAttribute(\"isArray\") === \"true\") {\n          json[name] = parseArray(n);\n        } else {\n          json[name] = parseObject(n);\n        }\n      }\n      return json;\n    }\n    parseObject(m);\n  }\n  // encode message in xml\n  // we use string because Strophe only accepts an \"xml-string\"..\n  // So {a:4,b:{c:5}} will look like\n  // <y a=\"4\">\n  //   <b c=\"5\"></b>\n  // </y>\n  // m - ltx element\n  // json - Object\n  encodeMessageToXml (msg, obj) {\n    // attributes is optional\n    function encodeObject (m, json) {\n      for (var name in json) {\n        var value = json[name];\n        if (name == null) {\n          // nop\n        } else if (value.constructor === Object) {\n          encodeObject(m.c(name), value);\n        } else if (value.constructor === Array) {\n          encodeArray(m.c(name), value);\n        } else {\n          m.setAttribute(name, value);\n        }\n      }\n    }\n    function encodeArray (m, array) {\n      m.setAttribute(\"isArray\", \"true\");\n      for (var e of array) {\n        if (e.constructor === Object) {\n          encodeObject(m.c(\"array-element\"), e);\n        } else {\n          encodeArray(m.c(\"array-element\"), e);\n        }\n      }\n    }\n    if (obj.constructor === Object) {\n      encodeObject(msg.c(\"y\", { xmlns: \"http://y.ninja/connector-stanza\" }), obj);\n    } else if (obj.constructor === Array) {\n      encodeArray(msg.c(\"y\", { xmlns: \"http://y.ninja/connector-stanza\" }), obj);\n    } else {\n      throw new Error(\"I can't encode this json!\");\n    }\n  }\n}\n","/* @flow */\nclass AbstractTransaction { //eslint-disable-line no-unused-vars\n  constructor (store : OperationStore) {\n    this.store = store;\n  }\n  // returns false if operation is not expected.\n  *addOperation (op) {\n    var state = yield* this.getState(op.id[0]);\n    if (op.id[1] === state.clock){\n      state.clock++;\n      yield* this.setState(state);\n      yield* this.setOperation(op);\n      this.store.operationAdded(op);\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\nY.AbstractTransaction = AbstractTransaction;\n\ntype Listener = {\n  f : GeneratorFunction, // is called when all operations are available\n  missing : number // number of operations that are missing\n}\n\ntype Id = [string, number];\n\nclass AbstractOperationStore { //eslint-disable-line no-unused-vars\n  constructor (y) {\n    this.y = y;\n    this.parentListeners = {};\n    this.parentListenersRequestPending = false;\n    this.parentListenersActivated = {};\n    // E.g. this.listenersById[id] : Array<Listener>\n    this.listenersById = {};\n    // Execute the next time a transaction is requested\n    this.listenersByIdExecuteNow = [];\n    // A transaction is requested\n    this.listenersByIdRequestPending = false;\n    /* To make things more clear, the following naming conventions:\n       * ls : we put this.listenersById on ls\n       * l : Array<Listener>\n       * id : Id (can't use as property name)\n       * sid : String (converted from id via JSON.stringify\n                       so we can use it as a property name)\n\n      Always remember to first overwrite over\n      a property before you iterate over it!\n    */\n  }\n  setUserId (userId) {\n    this.userId = userId;\n  }\n  apply (ops) {\n    for (var o of ops) {\n      var required = Y.Struct[o.type].requiredOps(o);\n      this.whenOperationsExist(required, Y.Struct[o.type].execute, o);\n    }\n  }\n  // f is called as soon as every operation requested is available.\n  // Note that Transaction can (and should) buffer requests.\n  whenOperationsExist (ids : Array<Id>, f : GeneratorFunction, args : Array<any>) {\n    if (ids.length > 0) {\n      let listener : Listener = {\n        f: f,\n        args: args || [],\n        missing: ids.length\n      };\n\n      for (let id of ids) {\n        let sid = JSON.stringify(id);\n        let l = this.listenersById[sid];\n        if (l == null){\n          l = [];\n          this.listenersById[sid] = l;\n        }\n        l.push(listener);\n      }\n    } else {\n      this.listenersByIdExecuteNow.push({\n        f: f,\n        args: args || []\n      });\n    }\n\n    if (this.listenersByIdRequestPending){\n      return;\n    }\n\n    this.listenersByIdRequestPending = true;\n    var store = this;\n\n    this.requestTransaction(function*(){\n      var exeNow = store.listenersByIdExecuteNow;\n      store.listenersByIdExecuteNow = [];\n\n      var ls = store.listenersById;\n      store.listenersById = {};\n\n      store.listenersByIdRequestPending = false;\n\n      for (let listener of exeNow) {\n        yield* listener.f.apply(this, listener.args);\n      }\n\n      for (var sid in ls){\n        var l = ls[sid];\n        var id = JSON.parse(sid);\n        if ((yield* this.getOperation(id)) == null){\n          store.listenersById[sid] = l;\n        } else {\n          for (let listener of l) {\n            if (--listener.missing === 0){\n              yield* listener.f.apply(this, listener.args);\n            }\n          }\n        }\n      }\n    });\n  }\n  // called by a transaction when an operation is added\n  operationAdded (op) {\n    // notify whenOperation listeners (by id)\n    var l = this.listenersById[op.id];\n    if (l != null) {\n      for (var listener of l){\n        if (--listener.missing === 0){\n          this.whenOperationsExist([], listener.f, listener.args);\n        }\n      }\n    }\n    // notify parent listeners, if possible\n    var listeners = this.parentListeners[op.parent];\n    if ( this.parentListenersRequestPending\n        || ( listeners == null )\n        || ( listeners.length === 0 )) {\n      return;\n    }\n    var al = this.parentListenersActivated[JSON.stringify(op.parent)];\n    if ( al == null ){\n      al = [];\n      this.parentListenersActivated[JSON.stringify(op.parent)] = al;\n    }\n    al.push(op);\n\n    this.parentListenersRequestPending = true;\n    var store = this;\n    this.requestTransaction(function*(){\n      store.parentListenersRequestPending = false;\n      var activatedOperations = store.parentListenersActivated;\n      store.parentListenersActivated = {};\n      for (var parentId in activatedOperations){\n        var parent = yield* this.getOperation(parentId);\n        Struct[parent.type].notifyObservers(activatedOperations[parentId]);\n      }\n    });\n\n  }\n  removeParentListener (id, f) {\n    var ls = this.parentListeners[id];\n    if (ls != null) {\n      this.parentListeners[id] = ls.filter(function(g){\n        return (f !== g);\n      });\n    }\n  }\n  addParentListener (id, f) {\n    var ls = this.parentListeners[JSON.stringify(id)];\n    if (ls == null) {\n      ls = [];\n      this.parentListeners[JSON.stringify(id)] = ls;\n    }\n    ls.push(f);\n  }\n}\nY.AbstractOperationStore = AbstractOperationStore;\n","\nclass WebRTC extends AbstractConnector {\n  constructor (options) {\n    if(options === undefined){\n      throw new Error(\"Options must not be undefined!\");\n    }\n    super({\n      role: \"slave\"\n    });\n\n    var room = options.room;\n\n    // connect per default to our server\n    if(options.url == null){\n      options.url = \"https://yatta.ninja:8888\";\n    }\n\n    var swr = new SimpleWebRTC(options); //eslint-disable-line no-undef\n    this.swr = swr;\n    var self = this;\n\n    swr.once(\"connectionReady\", function(userId){\n      // SimpleWebRTC (swr) is initialized\n      swr.joinRoom(room);\n\n      swr.once(\"joinedRoom\", function(){\n        self.setUserId(userId);\n        var i;\n        // notify the connector class about all the users that already\n        // joined the session\n        for(i in self.swr.webrtc.peers){\n          self.userJoined(self.swr.webrtc.peers[i].id, \"master\");\n        }\n        swr.on(\"channelMessage\", function(peer, room_, message){\n          // The client received a message\n          // Check if the connector is already initialized,\n          // only then forward the message to the connector class\n          if(message.type != null ){\n            self.receiveMessage(peer.id, message.payload);\n          }\n        });\n      });\n\n      swr.on(\"createdPeer\", function(peer){\n        // a new peer/client joined the session.\n        // Notify the connector class, if the connector\n        // is already initialized\n        self.userJoined(peer.id, \"master\");\n      });\n\n      swr.on(\"peerStreamRemoved\", function(peer){\n        // a client left the session.\n        // Notify the connector class, if the connector\n        // is already initialized\n        self.userLeft(peer.id);\n      });\n    });\n  }\n  send (uid, message) {\n    var self = this;\n    // we have to make sure that the message is sent under all circumstances\n    var send = function(){\n      // check if the clients still exists\n      var peer = self.swr.webrtc.getPeers(uid)[0];\n      var success;\n      if(peer){\n        // success is true, if the message is successfully sent\n        success = peer.sendDirectly(\"simplewebrtc\", \"yjs\", message);\n      }\n      if(!success){\n        // resend the message if it didn't work\n        setTimeout(send, 500);\n      }\n    };\n    // try to send the message\n    send();\n  }\n  broadcast (message) {\n    this.swr.sendDirectlyToAll(\"simplewebrtc\", \"yjs\", message);\n  }\n}\n\nY.WebRTC = WebRTC;\n","\ntype State = {\n  user: string,\n  clock: number\n};\n\ntype StateVector = Array<State>;\n\ntype StateSet = Object;\n\ntype IDBTransaction = Function;\ntype IDBObjectStore = Function;\ntype IDBRequest = Function;\ntype IDBCursor = Function;\ntype IDBKeyRange = Function;\n\ntype IDBOpenDBRequest = Function;\n\ndeclare var indexedDB : Object;\n\nY.IndexedDB = (function(){ //eslint-disable-line no-unused-vars\n  class Transaction extends AbstractTransaction { //eslint-disable-line\n    transaction: IDBTransaction;\n    sv: IDBObjectStore;\n    os: IDBObjectStore;\n    store: OperationStore;\n\n    constructor (store : OperationStore) {\n      super(store);\n      this.transaction = store.db.transaction([\"OperationStore\", \"StateVector\"], \"readwrite\");\n      this.sv = this.transaction.objectStore(\"StateVector\");\n      this.os = this.transaction.objectStore(\"OperationStore\");\n      this.buffer = {};\n    }\n    *setOperation (op) {\n      yield this.os.put(op);\n      this.buffer[JSON.stringify(op.id)] = op;\n      return op;\n    }\n    *getOperation (id) {\n      var op = this.buffer[JSON.stringify(id)];\n      if (op == null) {\n        op = yield this.os.get(id);\n        this.buffer[JSON.stringify(id)] = op;\n      }\n      return op;\n    }\n    *removeOperation (id) {\n      this.buffer[JSON.stringify(id)] = null;\n      return yield this.os.delete(id);\n    }\n    *setState (state : State) : State {\n      return yield this.sv.put(state);\n    }\n    *getState (user : string) : State {\n      var state;\n      if ((state = yield this.sv.get(user)) != null){\n        return state;\n      } else {\n        return {\n          user: user,\n          clock: 0\n        };\n      }\n    }\n    *getStateVector () : StateVector {\n      var stateVector = [];\n      var cursorResult = this.sv.openCursor();\n      var cursor;\n      while ((cursor = yield cursorResult) != null) {\n        stateVector.push(cursor.value);\n        cursor.continue();\n      }\n      return stateVector;\n    }\n    *getStateSet () : StateSet {\n      var sv : StateVector = yield* this.getStateVector();\n      var ss : StateSet = {};\n      for (var state of sv){\n        ss[state.user] = state.clock;\n      }\n      return ss;\n    }\n\n    *getOperations (startSS : StateSet) {\n      if (startSS == null){\n        startSS = {};\n      }\n      var ops = [];\n\n      var endSV : StateVector = yield* this.getStateVector();\n      for (var endState of endSV) {\n        var user = endState.user;\n        var startPos = startSS[user] || 0;\n        var endPos = endState.clock;\n        var range = IDBKeyRange.bound([user, startPos], [user, endPos]);\n        var cursorResult = this.os.openCursor(range);\n        var cursor;\n        while ((cursor = yield cursorResult) != null) {\n          ops.push(cursor.value);\n          cursor.continue();\n        }\n      }\n      return ops;\n    }\n  }\n  class OperationStore extends AbstractOperationStore { //eslint-disable-line no-undef\n    namespace: string;\n    ready: Promise;\n    whenReadyListeners: Array<Function>;\n    constructor (y, opts) {\n      super(y);\n      if (opts == null) {\n        opts = {};\n      }\n      if (opts.namespace == null || typeof opts.namespace !== \"string\") {\n        throw new Error(\"IndexedDB: expect a string (opts.namespace)!\");\n      } else {\n        this.namespace = opts.namespace;\n      }\n      if (opts.idbVersion != null) {\n        this.idbVersion = opts.idbVersion;\n      } else {\n        this.idbVersion = 5;\n      }\n\n      this.transactionQueue = {\n        queue: [],\n        onRequest: null\n      };\n\n      var store = this;\n\n      var tGen = (function *transactionGen(){\n        store.db = yield indexedDB.open(opts.namespace, store.idbVersion);\n        var transactionQueue = store.transactionQueue;\n\n        var transaction = null;\n        var cont = true;\n        while (cont) {\n          var request = yield transactionQueue;\n          transaction = new Transaction(store);\n\n          yield* request.call(transaction, request);/*\n          while (transactionQueue.queue.length > 0) {\n            yield* transactionQueue.queue.shift().call(transaction);\n          }*/\n        }\n      })();\n\n      function handleTransactions(t){ //eslint-disable-line no-unused-vars\n        var request = t.value;\n        if (t.done){\n          return;\n        } else if (request.constructor === IDBRequest\n                   || request.constructor === IDBCursor ) {\n          request.onsuccess = function(){\n            handleTransactions(tGen.next(request.result));\n          };\n          request.onerror = function(err){\n            tGen.throw(err);\n          };\n        } else if (request === store.transactionQueue) {\n          if (request.queue.length > 0){\n            handleTransactions(tGen.next(request.queue.shift()));\n          } else {\n            request.onRequest = function(){\n              request.onRequest = null;\n              handleTransactions(tGen.next(request.queue.shift()));\n            };\n          }\n        } else if ( request.constructor === IDBOpenDBRequest ) {\n          request.onsuccess = function(event){\n            var db = event.target.result;\n            handleTransactions(tGen.next(db));\n          };\n          request.onerror = function(){\n            tGen.throw(\"Couldn't open IndexedDB database!\");\n          };\n          request.onupgradeneeded = function(event){\n            var db = event.target.result;\n            try {\n              db.createObjectStore(\"OperationStore\", {keyPath: \"id\"});\n              db.createObjectStore(\"StateVector\", {keyPath: \"user\"});\n            } catch (e) {\n              console.log(\"Store already exists!\");\n            }\n          };\n        } else {\n          tGen.throw(\"You can not yield this type!\");\n        }\n      }\n      handleTransactions(tGen.next());\n\n    }\n    requestTransaction (makeGen : Function) {\n      this.transactionQueue.queue.push(makeGen);\n      if (this.transactionQueue.onRequest != null) {\n        this.transactionQueue.onRequest();\n      }\n    }\n    *removeDatabase () {\n      this.db.close();\n      yield indexedDB.deleteDatabase(this.namespace);\n    }\n  }\n  return OperationStore;\n})();\n","\ntype State = {\n  user: string,\n  clock: number\n};\n\ntype StateVector = Array<State>;\ntype OperationSet = Object; // os[Id] = op\ntype StateSet = Object;\n\nY.Memory = (function(){ //eslint-disable-line no-unused-vars\n  class Transaction extends AbstractTransaction { //eslint-disable-line\n    ss: StateSet;\n    os: OperationSet;\n    store: OperationStore;\n\n    constructor (store : OperationStore) {\n      super(store);\n      this.ss = store.ss;\n      this.os = store.os;\n    }\n    *setOperation (op) {\n      this.os[JSON.stringify(op.id)] = op;\n      return op;\n    }\n    *getOperation (id) {\n      return this.os[JSON.stringify(id)];\n    }\n    *removeOperation (id) {\n      delete this.os[JSON.stringify(id)];\n    }\n    *setState (state : State) : State {\n      this.ss[state.user] = state.clock;\n    }\n    *getState (user : string) : State {\n      var clock = this.ss[user];\n      if (clock == null){\n        clock = 0;\n      }\n      return {\n        user: user,\n        clock: clock\n      };\n    }\n    *getStateVector () : StateVector {\n      var stateVector = [];\n\n      for (var user in this.ss) {\n        var clock = this.ss[user];\n        stateVector.push({\n          user: user,\n          clock: clock\n        });\n      }\n      return stateVector;\n    }\n    *getStateSet () : StateSet {\n      return this.ss;\n    }\n    *getOperations (startSS : StateSet) {\n      if (startSS == null){\n        startSS = {};\n      }\n      var ops = [];\n\n      var endSV : StateVector = yield* this.getStateVector();\n      for (var endState of endSV) {\n        var user = endState.user;\n        var startPos = startSS[user] || 0;\n        var endPos = endState.clock;\n\n        for (var clock = startPos; clock <= endPos; clock++) {\n          var op = yield* this.getOperation([user, clock]);\n          if (op != null) {\n            ops.push(op);\n          }\n        }\n      }\n      return ops;\n    }\n  }\n  class OperationStore extends AbstractOperationStore { //eslint-disable-line no-undef\n    constructor (y) {\n      super(y);\n      this.os = {};\n      this.ss = {}\n    }\n    requestTransaction (makeGen : Function) {\n      var t = new Transaction(this);\n      var gen = makeGen.call(t);\n      var res = gen.next();\n      while(!res.done){\n        if (res.value === \"transaction\") {\n          res = gen.next(t);\n        } else {\n          throw new Error(\"You may not yield this type. (Maybe you meant to use 'yield*'?)\")\n        }\n      }\n    }\n    *removeDatabase () {\n      delete this.os;\n    }\n  }\n  return OperationStore;\n})();\n","\n\n(function(){\n\n  class List {\n    constructor (_model) {\n      this._model = _model;\n    }\n    *val (pos) {\n      if (pos != null) {\n        var o = yield* this.Struct.List.ref(this._model, pos);\n        return o ? o.content : null;\n      } else {\n        return yield* this.Struct.List.map(this._model, function(c){return c; });\n      }\n    }\n    *insert (pos, contents) {\n      yield* this.Struct.List.insert(pos, contents);\n    }\n  }\n\n  Y.List = function* YList(){\n    var model = yield* this.Struct.List.create();\n    return new List(model);\n  };\n  Y.List.Create = List;\n})();\n","\n(function(){\n  class Map {\n    constructor (_model) {\n      this._model = _model;\n    }\n    *val () {\n      var transaction = yield \"transaction\";\n      var model = yield* transaction.getOperation(this._model);\n      if (arguments.length === 0) {\n        throw new Error(\"Implement this case!\");\n      } else if (arguments.length === 1) {\n        return yield* Y.Struct.Map.get.call(transaction, model, arguments[0]);\n      } else {\n        return yield* Y.Struct.Map.set.call(transaction, model, arguments[0], arguments[1]);\n      }\n    }\n  }\n\n  Y.Map = function* YMap(){\n    if (this instanceof Y.AbstractOperationStore) {\n      var model = yield* Y.Struct.map.create.call(this);\n      return new Map(model);\n    } else {\n      throw new Error(\"Don't use `new` to create this type!\")\n    }\n  };\n  Y.Map.Create = Map;\n})();\n"],"sourceRoot":"/source/"}